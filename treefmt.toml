[formatter.mdformat]
command = "mdformat"
options = []
excludes = []
includes = ["*.md"]

[formatter.yamlfmt]
command = "yamlfmt"
options = []
excludes = []
includes = ["*.yml","*.yaml"]

[formatter.jsonfmt]
command = "jsonfmt"
options = ["-w"]
excludes = []
includes = ["*.json","*.jsonc"]

[formatter.beautysh]
command = "beautysh"
options = ["-i","2"]
excludes = []
includes = ["*.sh"]

[formatter.typstfmt]
command = "typstfmt"
options = ["--edit"]
excludes = []
includes = ["*.typ","*.typst"]

[formatter.deadnix]
command = "deadnix"
options = ["--edit"]
excludes = []
includes = ["*.nix"]

[formatter.nixfmt-rfc-style]
command = "nixfmt"
options = []
excludes = []
includes = ["*.nix"]

[formatter.prettier]
command = "prettier"
options = ["--write"]
excludes = []
includes = ["*.cjs","*.css","*.html","*.js","*.jsx","*.mdx","*.mjs","*.scss","*.ts","*.tsx","*.vue"]

# The following is an ugly hack, because golangci-lint does not play nice with single files and packages at the same time
[formatter.golang-helper]
command = "golangci-lint"
options = ["run", "-c", ".golangci.yaml"]
excludes = ["main.go", "cmd/client/*", "cmd/handler/*"]
includes = ["*.go"]

[formatter.golang-client]
command = "golangci-lint"
options = ["run", "-c", ".golangci.yaml"]
excludes = ["main.go", "cmd/helper/*", "cmd/handler/*"]
includes = ["*.go"]

[formatter.golang-handler]
command = "golangci-lint"
options = ["run", "-c", ".golangci.yaml"]
excludes = ["main.go", "cmd/helper/*", "cmd/client/*"]
includes = ["*.go"]

[formatter.golang-main]
command = "golangci-lint"
options = ["run", "-c", ".golangci.yaml"]
excludes = []
includes = ["./*.go"]

[global]
excludes = ["*.png","*.jpg","*.jpeg", "LICENSE"]

